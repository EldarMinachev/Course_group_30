GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. 
- https://github.com/EldarMinachev/JASON
 5. Клонировать репозиторий JSON на локальный компьютер. 
- git clone https://github.com/EldarMinachev/JASON
 6. Внутри локального JSON создать файл “new.json”. 
- touch new.json
 7. Добавить файл под гит. 
- git add new.json
 8. Закоммитить файл. 
- git commit -m "new.json"
 9. Отправить файл на внешний GitHub репозиторий. 
- git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- vim new.json
- "i"
     "full_name":"Minachev Eldar Damirovich"
     "age":24
     "pets": "0"
     "desired_Salary":"60 000 RUB"
- "esc"
- :wq
 11. Отправить изменения на внешний репозиторий. 
- git add "new.json"
- git commit -m "modified new.json"
- git push 
 12. Создать файл preferences.json
- touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
- vim preferences.json
- "i"
     "favorite_movie":"Inception",
     "favorite_series":"True Detective",
     "favorite_food":"Burgers",
     "favorite_season":"Summer",
     "country_you_would_like_to_visit":"Montenegro".
- "ecs"
- :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
- cat > skills.json
"Skills":
	"software testing theory",
	"client-server architecture",
	"HTTP Server Request Methods",
	"HTTP server Response codes",
	"Structures of HTTP requests and responses",
	"What is JSON, XML. Their structure",
	"API testing via Postman JS, API autotests",
	"Removing and reading logs from an external server",
	"Sniffing http web traffic through Charles and Fiddler",
	"Dev Tools of web browsers Google Chrome, FireFox",
	"VPN. How it works, why you need it, how to use it, tool options",
	"Mobile testing",
	"Feature of iOS, Android, guidelines",
	"Build iOS applications on Xcode",
	"Build Android applications on Android Studio",
	"ADB management of android devices",
	"Setting up proxy and vpn on iOS and Android",
	"Interception (sniffing) of mobile traffic through Charles and Fiddler on iOS and Android",
	"Command line (terminal) Linux copy, create, view, move files on servers without a graphical interface",
	"Basics of bash scripting, automation of routine tasks on the server",
	"Access to remote servers",
	"Basics of SQL Create, Delete, Drop, Insert Into, Select, From, Where, Join",
	"Postgres database installation, configuration and use",
	"Non-relational database Redis installation, configuration and use",
	"Load testing in Jmeter",
	"Scrum development methodology",
	"Python. Learning the basics. Building a client-server application"
- enter
- cntrl + d
 15. Отправить сразу 2 файла на внешний репозиторий.
- git add .
- git commit -m "add preferences.json and skills.json"
- git push
 16. На веб интерфейсе создать файл bug_report.json.
Войти в репозиторий JSON. Нажать кнопку Add file.
Выбрать "Create new file". В поле "Name your file" ввести bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку Commit new file.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Choose bug_report.json --> Edit this file
        "ID": "B24",
        "Title": "Нажатие кнопки 'Оплатить' на главной странице не перенаправляет на страницу оплаты",
        "Project": "Сайт быстрых покупок 'Покупки.com'",
        "STR": [
                "1. Зайти на главную страницу сайта (ссылка_на_сайт)",
                "2. Нажать кнопку Оплатить"
        ],
        "Enviroment":
        {
                "OS": "Windows 10 x64 build 21H2",
                "Browser": "Google Версия 102.0.5005.62 (Официальная сборка), (64 бит)"
        },
        "Component": "Кнопка Оплатить",
        "Build": "0.5.7",
        "Actual result": "Нажатие кнопки Оплатить НЕ перенаправляет на страницу Оплаты",
        "Expected result": "Нажатие кнопки Оплатить перенаправляет на страницу Оплаты",
        "Severity": "Critical",
        "Priority": "High",
        "Status": "Open",
        "Author": "Иван Иванович",
        "Sign to": "Владимир Владимирович",
        "Attachments": "ссылка_на_картинку_или_видео_с_багом"
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit changes"
 20. Синхронизировать внешний и локальный репозиторий JSON
- git pull

XML
 21. Создать внешний репозиторий c названием XML.
- https://github.com/EldarMinachev/XML.git
 22. Клонировать репозиторий XML на локальный компьютер.
 - git clone https://github.com/EldarMinachev/XML.git
 23. Внутри локального XML создать файл “new.xml”.
- touch new.xml
 24. Добавить файл под гит.
- git add new.xml
 25. Закоммитить файл.
- git commit -m "new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
- vim new.xml
- "i"
     "full_name":"Minachev Eldar Damirovich"
     "age":24
     "pets": "0"
     "desired_Salary":"60 000 RUB"
- "esc"
- :wq
 28. Отправить изменения на внешний репозиторий.
- git add "new.xml"
- git commit -m "modified new.xml"
- git push 
 29. Создать файл preferences.xml
- touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
- vim preferences.xml
- "i"
     "favorite_movie":"Inception",
     "favorite_series":"True Detective",
     "favorite_food":"Burgers",
     "favorite_season":"Summer",
     "country_you_would_like_to_visit":"Montenegro".
- "ecs"
- :wq 
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
- cat > skills.xml
"Skills":
	"software testing theory",
	"client-server architecture",
	"HTTP Server Request Methods",
	"HTTP server Response codes",
	"Structures of HTTP requests and responses",
	"What is JSON, XML. Their structure",
	"API testing via Postman JS, API autotests",
	"Removing and reading logs from an external server",
	"Sniffing http web traffic through Charles and Fiddler",
	"Dev Tools of web browsers Google Chrome, FireFox",
	"VPN. How it works, why you need it, how to use it, tool options",
	"Mobile testing",
	"Feature of iOS, Android, guidelines",
	"Build iOS applications on Xcode",
	"Build Android applications on Android Studio",
	"ADB management of android devices",
	"Setting up proxy and vpn on iOS and Android",
	"Interception (sniffing) of mobile traffic through Charles and Fiddler on iOS and Android",
	"Command line (terminal) Linux copy, create, view, move files on servers without a graphical interface",
	"Basics of bash scripting, automation of routine tasks on the server",
	"Access to remote servers",
	"Basics of SQL Create, Delete, Drop, Insert Into, Select, From, Where, Join",
	"Postgres database installation, configuration and use",
	"Non-relational database Redis installation, configuration and use",
	"Load testing in Jmeter",
	"Scrum development methodology",
	"Python. Learning the basics. Building a client-server application"
- enter
- cntrl + d
 32. Сделать коммит в одну строку.
- git add .
- git commit -m "comment"
 33. Отправить сразу 2 файла на внешний репозиторий.
- git push
 34. На веб интерфейсе создать файл bug_report.xml.
Войти в репозиторий XML. Нажать кнопку Add file.
Выбрать "Create new file". В поле "Name your file" ввести bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку Commit new file.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Choose bug_report.xml --> Edit this file

        "ID": "B24",
        "Title": "Нажатие кнопки 'Оплатить' на главной странице не перенаправляет на страницу оплаты",
        "Project": "Сайт быстрых покупок 'Покупки.com'",
        "STR": [
                "1. Зайти на главную страницу сайта (ссылка_на_сайт)",
                "2. Нажать кнопку Оплатить"
        ],
        "Enviroment":
        {
                "OS": "Windows 10 x64 build 21H2",
                "Browser": "Google Версия 102.0.5005.62 (Официальная сборка), (64 бит)"
        },
        "Component": "Кнопка Оплатить",
        "Build": "0.5.7",
        "Actual result": "Нажатие кнопки Оплатить НЕ перенаправляет на страницу Оплаты",
        "Expected result": "Нажатие кнопки Оплатить перенаправляет на страницу Оплаты",
        "Severity": "Critical",
        "Priority": "High",
        "Status": "Open",
        "Author": "Иван Иванович",
        "Sign to": "Владимир Владимирович",
        "Attachments": "ссылка_на_картинку_или_видео_с_багом"
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit changes"
 38. Синхронизировать внешний и локальный репозиторий XML
- git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
https://github.com/EldarMinachev/TXT.git
 2. Клонировать репозиторий TXT на локальный компьютер.
- git clone https://github.com/EldarMinachev/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
- touch new.txt
 4. Добавить файл под гит.
- git add new.txt
 5. Закоммитить файл.
- git commit -m "new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
- git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
- vim new.txt
- "i"
     "full_name":"Minachev Eldar Damirovich"
     "age":24
     "pets": "0"
     "desired_Salary":"60 000 RUB"
- "esc"
- :wq 
8. Отправить изменения на внешний репозиторий.
- git add "new.txt"
- git commit -m "modified new.xml"
- git push 
 9. Создать файл preferences.txt
- touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 - vim preferences.txt
- "i"
     "favorite_movie":"Inception",
     "favorite_series":"True Detective",
     "favorite_food":"Burgers",
     "favorite_season":"Summer",
     "country_you_would_like_to_visit":"Montenegro".
- "ecs"
- :wq 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
- cat > skills.txt
"Skills":
	"software testing theory",
	"client-server architecture",
	"HTTP Server Request Methods",
	"HTTP server Response codes",
	"Structures of HTTP requests and responses",
	"What is JSON, XML. Their structure",
	"API testing via Postman JS, API autotests",
	"Removing and reading logs from an external server",
	"Sniffing http web traffic through Charles and Fiddler",
	"Dev Tools of web browsers Google Chrome, FireFox",
	"VPN. How it works, why you need it, how to use it, tool options",
	"Mobile testing",
	"Feature of iOS, Android, guidelines",
	"Build iOS applications on Xcode",
	"Build Android applications on Android Studio",
	"ADB management of android devices",
	"Setting up proxy and vpn on iOS and Android",
	"Interception (sniffing) of mobile traffic through Charles and Fiddler on iOS and Android",
	"Command line (terminal) Linux copy, create, view, move files on servers without a graphical interface",
	"Basics of bash scripting, automation of routine tasks on the server",
	"Access to remote servers",
	"Basics of SQL Create, Delete, Drop, Insert Into, Select, From, Where, Join",
	"Postgres database installation, configuration and use",
	"Non-relational database Redis installation, configuration and use",
	"Load testing in Jmeter",
	"Scrum development methodology",
	"Python. Learning the basics. Building a client-server application"
- enter
- cntrl + d 
 12. Сделать коммит в одну строку.
- git add .
- git commit -m "comment"
 13. Отправить сразу 2 файла на внешний репозиторий.
- git push
 14. На веб интерфейсе создать файл bug_report.txt.
Войти в репозиторий TXT. Нажать кнопку Add file.
Выбрать "Create new file". В поле "Name your file" ввести bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку Commit new file.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Choose bug_report.xml --> Edit this file

        "ID": "B24",
        "Title": "Нажатие кнопки 'Оплатить' на главной странице не перенаправляет на страницу оплаты",
        "Project": "Сайт быстрых покупок 'Покупки.com'",
        "STR": [
                "1. Зайти на главную страницу сайта (ссылка_на_сайт)",
                "2. Нажать кнопку Оплатить"
        ],
        "Enviroment":
        {
                "OS": "Windows 10 x64 build 21H2",
                "Browser": "Google Версия 102.0.5005.62 (Официальная сборка), (64 бит)"
        },
        "Component": "Кнопка Оплатить",
        "Build": "0.5.7",
        "Actual result": "Нажатие кнопки Оплатить НЕ перенаправляет на страницу Оплаты",
        "Expected result": "Нажатие кнопки Оплатить перенаправляет на страницу Оплаты",
        "Severity": "Critical",
        "Priority": "High",
        "Status": "Open",
        "Author": "Иван Иванович",
        "Sign to": "Владимир Владимирович",
        "Attachments": "ссылка_на_картинку_или_видео_с_багом"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit changes"
 18. Синхронизировать внешний и локальный репозиторий TXT
- git pull
